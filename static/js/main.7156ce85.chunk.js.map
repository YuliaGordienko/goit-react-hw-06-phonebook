{"version":3,"sources":["Input/Input.module.css","Input/Input.jsx","ContactsList/ContactsList.jsx","FiltrByName/FiltrByName.jsx","Redux/Contacts/contacts-actions.js","App.js","reportWebVitals.js","Redux/Contacts/contacts-reducer.js","Redux/store.js","index.js","ContactsList/contactslist.module.css"],"names":["module","exports","Input","handleSubmit","handleChange","valueName","valueNumber","onSubmit","value","type","name","pattern","title","required","onChange","require","v4","ContactList","contacts","onDeleteContacts","length","className","s","list","map","contact","item","discribe","number","onClick","id","FiltrByName","addContact","createAction","addContacts","filterForCont","deleteContact","uuidv4","App","useSelector","state","items","filterQuery","dispatch","useDispatch","useState","setName","setNumber","getArr","filterLowerCase","toLowerCase","filter","includes","arrayContacs","style","marginLeft","e","preventDefault","find","alert","currentTarget","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","payload","_","combineReducers","store","configureStore","reducer","MainReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7156ce85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Input_form__nYT-R\"};","import React from \"react\";\r\nimport s from \"./Input.module.css\";\r\nconst Input = ({ handleSubmit, handleChange, valueName, valueNumber }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          value={valueName}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          value={valueNumber}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n};\r\nexport default Input;\r\n","import React from \"react\";\r\nimport s from \"./contactslist.module.css\";\r\nconst { v4: uuidv4 } = require(\"uuid\");\r\n\r\nexport default function ContactList({ contacts, onDeleteContacts }) {\r\n  return (\r\n    <>\r\n      <p>Contacs:</p>\r\n      {contacts.length > 0 && (\r\n        <ul className={s.list}>\r\n          {contacts.map((contact) => (\r\n            <li key={contact.id} className={s.item}>\r\n              <p className={s.discribe}>\r\n                {contact.name}: {contact.number}\r\n              </p>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => onDeleteContacts(contact.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nconst FiltrByName = ({ value, onChange }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\nexport default FiltrByName;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\nconst { v4: uuidv4 } = require(\"uuid\");\r\n\r\nexport const addContact = createAction(\"contacts/Add\");\r\nexport const addContacts = createAction(\"contacts/ADD_CONTACTS\");\r\nexport const filterForCont = createAction(\"contacts/Filter\");\r\nexport const deleteContact = createAction(\"contacts/DELETE\");\r\n","import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Input from \"./Input/Input\";\nimport ContactsList from \"./ContactsList/ContactsList\";\nimport FiltrByName from \"./FiltrByName/FiltrByName\";\nimport {\n  addContact,\n  addContacts,\n  filterForCont,\n  deleteContact,\n} from \"./Redux/Contacts/contacts-actions\";\nconst { v4: uuidv4 } = require(\"uuid\");\n\nexport default function App() {\n  const { items, filterQuery } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    if (items.find((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      dispatch(addContact(contact));\n    }\n    setName(\"\");\n    setNumber(\"\");\n  };\n  const arrayContacs = () => {\n    const filterLowerCase = filterQuery?.toLowerCase();\n    return items.filter((contact) =>\n      contact?.name?.toLowerCase().includes(filterLowerCase)\n    );\n  };\n  const handleFilterChange = (e) => {\n    dispatch(filterForCont(e.currentTarget.value));\n  };\n  const deleteContacs = (contactId) => {\n    dispatch(deleteContact(contactId));\n  };\n  const getArr = arrayContacs();\n\n  return (\n    <div style={{ marginLeft: \"20px\" }}>\n      <h1>Phonebook</h1>\n      <Input\n        handleSubmit={handleSubmit}\n        handleChange={handleChange}\n        valueName={name}\n        valueNumber={number}\n      />\n      <FiltrByName value={filterQuery} onChange={handleFilterChange} />\n      <ContactsList contacts={getArr} onDeleteContacts={deleteContacs} />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContact,\r\n  addContacts,\r\n  filterForCont,\r\n  deleteContact,\r\n} from \"./contacts-actions\";\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [addContacts]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filterQuery = createReducer(\"\", {\r\n  [filterForCont]: (_, { payload }) => payload,\r\n});\r\nexport default combineReducers({\r\n  items,\r\n  filterQuery,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport MainReducer from \"./Contacts/contacts-reducer\";\r\nconst store = configureStore({\r\n  reducer: MainReducer,\r\n});\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./Redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"contactslist_item__2y2fv\",\"discribe\":\"contactslist_discribe__1TMzt\"};"],"sourceRoot":""}